/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sousinho (https://sketchfab.com/sousinho)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/basic-pc-monitors-58a2dba70e4f4752962ee98a9d6827be
Title: Basic PC Monitors
*/

import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Object_4: THREE.Mesh;
		Object_6: THREE.Mesh;
		Object_8: THREE.Mesh;
		Object_10: THREE.Mesh;
	};
	materials: {
		T_wide_monitor: THREE.MeshStandardMaterial;
		T_standard_monitor: THREE.MeshStandardMaterial;
	};
};

export function WidescreenMonitor(props: JSX.IntrinsicElements['group']) {
	const { nodes, materials } = useGLTF('/models/basic_pc_monitors.glb') as GLTFResult;

	materials.T_wide_monitor.roughness = 0.3;

	return (
		<group {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Object_4.geometry}
				material={materials.T_wide_monitor}
				position={[0, 0.2788, -0.0829]}
				rotation={[0, 0, 0]}
				scale={[0.65, 1, 0.45]}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Object_6.geometry}
				material={materials.T_wide_monitor}
				position={[0, 0.0959, -0.0189]}
			/>
			{/* <mesh
				castShadow
				receiveShadow
				geometry={nodes.Object_8.geometry}
				material={materials.T_standard_monitor}
				position={[0.917, 0.0177, 0.1079]}
			/> */}
			{/* <mesh
				castShadow
				receiveShadow
				geometry={nodes.Object_10.geometry}
				material={materials.T_standard_monitor}
				position={[0.917, 0.2851, 0.0079]}
			/> */}
		</group>
	);
}

useGLTF.preload('/models/basic_pc_monitors.glb');
