/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: kelseysmith1028 (https://sketchfab.com/kelseysmith1028)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/modern-black-table-lamp-eb5bdce013e2406ca66404325589f15d
Title: Modern Black Table Lamp
*/

import { createExternalResource } from '@/utils/resourceUtils';
import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Object_2: THREE.Mesh;
		Object_3: THREE.Mesh;
		Object_4: THREE.Mesh;
		Object_5: THREE.Mesh;
	};
	materials: {
		Color_D01: THREE.MeshStandardMaterial;
		Metal_Silver: THREE.MeshStandardMaterial;
		Granite_Dark_Gray: THREE.MeshStandardMaterial;
		FrontColor: THREE.MeshStandardMaterial;
	};
};

const localPath = 'models/modern_black_table_lamp.glb';
const uploadThingId = 'ayWUAmbcwFZQbBqyQGzVAzg7oiwlhYu4PmHcFrL59fsBDxN6';
const externalResource = createExternalResource(localPath, uploadThingId);

export function TableLamp(props: JSX.IntrinsicElements['group']) {
	const { nodes, materials } = useGLTF(externalResource) as GLTFResult;
	return (
		<group {...props} dispose={null} scale={[0.001, 0.001, -0.001]}>
			<group rotation={[-Math.PI / 2, 0, 0]}>
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Object_2.geometry}
					material={materials.Color_D01}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Object_3.geometry}
					material={materials.Metal_Silver}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Object_4.geometry}
					material={materials.Granite_Dark_Gray}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Object_5.geometry}
					material={materials.FrontColor}
				/>
			</group>
		</group>
	);
}

useGLTF.preload(externalResource);
